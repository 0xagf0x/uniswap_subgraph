{"ast":null,"code":"var _jsxFileName = \"/Users/charlesbuckley/coding/uniswap-v3-subgraph/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useQuery, gql, ApolloProvider } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  request\n} = require('graphql-request');\n\n// const GET_TOP_POOLS = gql`\n//   query GetTopPools {\n//     pools(first: 10, orderBy: totalValueLockedUSD, orderDirection: desc) {\n//       id\n//       token0 {\n//         symbol\n//       }\n//       token1 {\n//         symbol\n//       }\n//       feeTier\n//       totalValueLockedUSD\n//       volumeUSD(orderBy: volumeUSD, orderDirection: desc, where: { timeInterval: DAY }) {\n//         volumeUSD\n//       }\n//     }\n//   }\n// `;\n\nconst query = gql`\n  query {\n    pools(first: 10, orderBy: totalValueLockedUSD, orderDirection: desc) {\n      id\n      token0 {\n        symbol\n      }\n      token1 {\n        symbol\n      }\n      feeTier\n      totalValueLockedUSD\n      volumeUSD(orderBy: volumeUSD, orderDirection: desc, where: { timeInterval: DAY }) {\n        volumeUSD\n      }\n    }\n    tokens(first: 10, orderBy: tradeVolumeUSD, orderDirection: desc) {\n      id\n      symbol\n      name\n      derivedETH\n      totalValueLockedUSD\n      volumeUSD(orderBy: volumeUSD, orderDirection: desc, where: { timeInterval: DAY }) {\n        volumeUSD\n      }\n      dayData(orderBy: date, orderDirection: desc, first: 1) {\n        priceUSD\n        priceUSDChange\n      }\n    }\n    swaps(first: 10, orderBy: timestamp, orderDirection: desc) {\n      id\n      timestamp\n      amount0In\n      amount0Out\n      amount1In\n      amount1Out\n      amountUSD\n      sender\n    }\n  }\n`;\n\n// Make the GraphQL request to the Uniswap V3 Subgraph endpoint\nrequest('https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v3', query).then(data => console.log(data)).catch(error => console.error(error));\nfunction App() {\n  _s();\n  const {\n    loading,\n    error,\n    data,\n    refetch\n  } = useQuery(query);\n  useEffect(() => {\n    console.log('data', data);\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error :(\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => refetch(),\n        children: \"Refresh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"container__table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Pool ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Total Value Locked (USD)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"24Hr Volume (USD)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1t3ofXeMrBRJ3KjprIckY5duZO8=\", false, function () {\n  return [useQuery];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useQuery","gql","ApolloProvider","jsxDEV","_jsxDEV","request","require","query","then","data","console","log","catch","error","App","_s","loading","refetch","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","_c","$RefreshReg$"],"sources":["/Users/charlesbuckley/coding/uniswap-v3-subgraph/src/App.js"],"sourcesContent":["import React, {useEffect} from 'react';\nimport { useQuery, gql, ApolloProvider} from '@apollo/client';\nconst { request } = require('graphql-request');\n\n\n\n// const GET_TOP_POOLS = gql`\n//   query GetTopPools {\n//     pools(first: 10, orderBy: totalValueLockedUSD, orderDirection: desc) {\n//       id\n//       token0 {\n//         symbol\n//       }\n//       token1 {\n//         symbol\n//       }\n//       feeTier\n//       totalValueLockedUSD\n//       volumeUSD(orderBy: volumeUSD, orderDirection: desc, where: { timeInterval: DAY }) {\n//         volumeUSD\n//       }\n//     }\n//   }\n// `;\n\nconst query = gql`\n  query {\n    pools(first: 10, orderBy: totalValueLockedUSD, orderDirection: desc) {\n      id\n      token0 {\n        symbol\n      }\n      token1 {\n        symbol\n      }\n      feeTier\n      totalValueLockedUSD\n      volumeUSD(orderBy: volumeUSD, orderDirection: desc, where: { timeInterval: DAY }) {\n        volumeUSD\n      }\n    }\n    tokens(first: 10, orderBy: tradeVolumeUSD, orderDirection: desc) {\n      id\n      symbol\n      name\n      derivedETH\n      totalValueLockedUSD\n      volumeUSD(orderBy: volumeUSD, orderDirection: desc, where: { timeInterval: DAY }) {\n        volumeUSD\n      }\n      dayData(orderBy: date, orderDirection: desc, first: 1) {\n        priceUSD\n        priceUSDChange\n      }\n    }\n    swaps(first: 10, orderBy: timestamp, orderDirection: desc) {\n      id\n      timestamp\n      amount0In\n      amount0Out\n      amount1In\n      amount1Out\n      amountUSD\n      sender\n    }\n  }\n`;\n\n// Make the GraphQL request to the Uniswap V3 Subgraph endpoint\nrequest('https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v3', query)\n  .then(data => console.log(data))\n  .catch(error => console.error(error));\n\nfunction App() {\n  const { loading, error, data, refetch } = useQuery(query);\n\n  useEffect(() => {\n    console.log('data', data)\n  }, [])\n  \n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  return (\n    <ApolloProvider>\n      <div className='container'>\n        {/* <img className=\"header-logo\" src={uniswapLogo} alt=\"uniswap logo\" /> */}\n        <button onClick={() => refetch()}>Refresh</button>\n        <table className='container__table'>\n          <thead>\n            <tr>\n              <th>Pool ID</th>\n              <th>Total Value Locked (USD)</th>\n              <th>24Hr Volume (USD)</th>\n            </tr>\n          </thead>\n          <tbody>\n            {/* {data.pools.map((pool) => (\n              <tr key={pool.id}>\n                <td>{pool.id}</td>\n                <td>{pool.totalValueLockedUSD}</td>\n                <td>{pool.volumeUSD}</td>\n              </tr>\n            ))} */}\n          </tbody>\n        </table>\n      </div>\n    \n    </ApolloProvider>\n   \n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}