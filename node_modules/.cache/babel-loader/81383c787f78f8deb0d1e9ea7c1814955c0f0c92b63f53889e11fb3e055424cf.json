{"ast":null,"code":"var _jsxFileName = \"/Users/charlesbuckley/coding/uniswap-v3-subgraph/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { gql, useQuery, ApolloClient, makeApolloClient } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_TOP_POOLS = gql`\n  query TopPools($limit: Int!, $orderBy: String!, $orderDirection: String!) {\n    pools(first: $limit, orderBy: $orderBy, orderDirection: $orderDirection) {\n      id\n      feeTier\n      totalValueLockedUSD\n      dailyVolumeUSD\n    }\n  }\n`;\nfunction App(_ref) {\n  _s();\n  let {\n    limit = 10,\n    orderBy = 'totalValueLockedUSD',\n    orderDirection = 'desc'\n  } = _ref;\n  let [client, setClient] = useState(ApolloClient);\n  client = makeApolloClient(\"...\");\n  setClient(client);\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_TOP_POOLS, {\n    variables: {\n      limit,\n      orderBy,\n      orderDirection\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error :(\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Pool ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Fee Tier\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Total Value Locked (USD)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Daily Volume (USD)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: data.pools.map(pool => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: pool.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: pool.feeTier\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: pool.totalValueLockedUSD\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: pool.dailyVolumeUSD\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, pool.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"vB+cZhxAMIFtVu49T7x0K71slv4=\", false, function () {\n  return [useQuery];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","gql","useQuery","ApolloClient","makeApolloClient","jsxDEV","_jsxDEV","GET_TOP_POOLS","App","_ref","_s","limit","orderBy","orderDirection","client","setClient","loading","error","data","variables","children","fileName","_jsxFileName","lineNumber","columnNumber","pools","map","pool","id","feeTier","totalValueLockedUSD","dailyVolumeUSD","_c","$RefreshReg$"],"sources":["/Users/charlesbuckley/coding/uniswap-v3-subgraph/src/App.js"],"sourcesContent":["import React, {useState} from 'react';\nimport { gql, useQuery, ApolloClient, makeApolloClient } from '@apollo/client';\n\n\nconst GET_TOP_POOLS = gql`\n  query TopPools($limit: Int!, $orderBy: String!, $orderDirection: String!) {\n    pools(first: $limit, orderBy: $orderBy, orderDirection: $orderDirection) {\n      id\n      feeTier\n      totalValueLockedUSD\n      dailyVolumeUSD\n    }\n  }\n`;\n\n\n\nfunction App({ limit = 10, orderBy = 'totalValueLockedUSD', orderDirection = 'desc' }) {\n  let [client, setClient] = useState(ApolloClient);\n  client = makeApolloClient(\"...\");\n  setClient(client);\n  const { loading, error, data } = useQuery(GET_TOP_POOLS, {\n    variables: { limit, orderBy, orderDirection },\n  });\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>Pool ID</th>\n          <th>Fee Tier</th>\n          <th>Total Value Locked (USD)</th>\n          <th>Daily Volume (USD)</th>\n        </tr>\n      </thead>\n      <tbody>\n        {data.pools.map((pool) => (\n          <tr key={pool.id}>\n            <td>{pool.id}</td>\n            <td>{pool.feeTier}</td>\n            <td>{pool.totalValueLockedUSD}</td>\n            <td>{pool.dailyVolumeUSD}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}