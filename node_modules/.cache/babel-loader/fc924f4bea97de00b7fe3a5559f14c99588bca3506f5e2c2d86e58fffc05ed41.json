{"ast":null,"code":"/* eslint-disable no-unused-expressions */\nimport { _ as e, L as t } from \"./index-4deec983.js\";\nimport { a as n, C as i } from \"./Controller-26bd1e9e.js\";\nimport { S as s } from \"./ScrollObserver-d0732a2c.js\";\nimport { F as o } from \"./index-bee741e4.js\";\nclass r {\n  constructor(e, t, n) {\n    let i = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : !1;\n    const s = this,\n      o = -1 !== document.location.search.toLowerCase().indexOf(\"debug=webgl\");\n    s.canvas = e, s.gl = s.canvas.getContext(\"webgl\", {\n      antialias: !0\n    }), s.meshes = [];\n    const r = s.gl;\n    t && n && this.setSize(t, n), s.lastDebugMsg, s.debug = i && o ? function (e) {\n      const t = new Date();\n      t - s.lastDebugMsg > 1e3 && console.log(\"---\"), console.log(t.toLocaleTimeString() + Array(Math.max(0, 32 - e.length)).join(\" \") + e + \": \", ...Array.from(arguments).slice(1)), s.lastDebugMsg = t;\n    } : () => {}, Object.defineProperties(s, {\n      Material: {\n        enumerable: !1,\n        value: class {\n          constructor(e, t) {\n            let n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n            const i = this;\n            function o(e, t) {\n              const n = r.createShader(e);\n              return r.shaderSource(n, t), r.compileShader(n), r.getShaderParameter(n, r.COMPILE_STATUS) || console.error(r.getShaderInfoLog(n)), s.debug(\"Material.compileShaderSource\", {\n                source: t\n              }), n;\n            }\n            function a(e, t) {\n              return Object.entries(e).map(_ref => {\n                let [e, n] = _ref;\n                return n.getDeclaration(e, t);\n              }).join(\"\\n\");\n            }\n            i.uniforms = n, i.uniformInstances = [];\n            const l = \"\\n              precision highp float;\\n            \";\n            i.vertexSource = `\\n              ${l}\\n              attribute vec4 position;\\n              attribute vec2 uv;\\n              attribute vec2 uvNorm;\\n              ${a(s.commonUniforms, \"vertex\")}\\n              ${a(n, \"vertex\")}\\n              ${e}\\n            `, i.fragmentSource = `\\n              ${l}\\n              ${a(s.commonUniforms, \"fragment\")}\\n              ${a(n, \"fragment\")}\\n              ${t}\\n            `, i.vertexShader = o(r.VERTEX_SHADER, i.vertexSource), i.fragmentShader = o(r.FRAGMENT_SHADER, i.fragmentSource), i.program = r.createProgram(), r.attachShader(i.program, i.vertexShader), r.attachShader(i.program, i.fragmentShader), r.linkProgram(i.program), r.getProgramParameter(i.program, r.LINK_STATUS) || console.error(r.getProgramInfoLog(i.program)), r.useProgram(i.program), i.attachUniforms(void 0, s.commonUniforms), i.attachUniforms(void 0, i.uniforms);\n          }\n          attachUniforms(e, t) {\n            const n = this;\n            void 0 === e ? Object.entries(t).forEach(_ref2 => {\n              let [e, t] = _ref2;\n              n.attachUniforms(e, t);\n            }) : \"array\" == t.type ? t.value.forEach((t, i) => n.attachUniforms(`${e}[${i}]`, t)) : \"struct\" == t.type ? Object.entries(t.value).forEach(_ref3 => {\n              let [t, i] = _ref3;\n              return n.attachUniforms(`${e}.${t}`, i);\n            }) : (s.debug(\"Material.attachUniforms\", {\n              name: e,\n              uniform: t\n            }), n.uniformInstances.push({\n              uniform: t,\n              location: r.getUniformLocation(n.program, e)\n            }));\n          }\n        }\n      },\n      Uniform: {\n        enumerable: !1,\n        value: class {\n          constructor(e) {\n            this.type = \"float\", Object.assign(this, e);\n            this.typeFn = {\n              float: \"1f\",\n              int: \"1i\",\n              vec2: \"2fv\",\n              vec3: \"3fv\",\n              vec4: \"4fv\",\n              mat4: \"Matrix4fv\"\n            }[this.type] || \"1f\", this.update();\n          }\n          update(e) {\n            void 0 !== this.value && r[`uniform${this.typeFn}`](e, 0 === this.typeFn.indexOf(\"Matrix\") ? this.transpose : this.value, 0 === this.typeFn.indexOf(\"Matrix\") ? this.value : null);\n          }\n          getDeclaration(e, t, n) {\n            const i = this;\n            if (i.excludeFrom !== t) {\n              if (\"array\" === i.type) return i.value[0].getDeclaration(e, t, i.value.length) + `\\nconst int ${e}_length = ${i.value.length};`;\n              if (\"struct\" === i.type) {\n                let s = e.replace(\"u_\", \"\");\n                return s = s.charAt(0).toUpperCase() + s.slice(1), `uniform struct ${s} {\\n` + Object.entries(i.value).map(_ref4 => {\n                  let [e, n] = _ref4;\n                  return n.getDeclaration(e, t).replace(/^uniform/, \"\");\n                }).join(\"\") + `\\n} ${e}${n > 0 ? `[${n}]` : \"\"};`;\n              }\n              return `uniform ${i.type} ${e}${n > 0 ? `[${n}]` : \"\"};`;\n            }\n          }\n        }\n      },\n      PlaneGeometry: {\n        enumerable: !1,\n        value: class {\n          constructor(e, t, n, i, o) {\n            r.createBuffer(), this.attributes = {\n              position: new s.Attribute({\n                target: r.ARRAY_BUFFER,\n                size: 3\n              }),\n              uv: new s.Attribute({\n                target: r.ARRAY_BUFFER,\n                size: 2\n              }),\n              uvNorm: new s.Attribute({\n                target: r.ARRAY_BUFFER,\n                size: 2\n              }),\n              index: new s.Attribute({\n                target: r.ELEMENT_ARRAY_BUFFER,\n                size: 3,\n                type: r.UNSIGNED_SHORT\n              })\n            }, this.setTopology(n, i), this.setSize(e, t, o);\n          }\n          setTopology() {\n            let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n            let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n            const n = this;\n            n.xSegCount = e, n.ySegCount = t, n.vertexCount = (n.xSegCount + 1) * (n.ySegCount + 1), n.quadCount = n.xSegCount * n.ySegCount * 2, n.attributes.uv.values = new Float32Array(2 * n.vertexCount), n.attributes.uvNorm.values = new Float32Array(2 * n.vertexCount), n.attributes.index.values = new Uint16Array(3 * n.quadCount);\n            for (let e = 0; e <= n.ySegCount; e++) for (let t = 0; t <= n.xSegCount; t++) {\n              const i = e * (n.xSegCount + 1) + t;\n              if (n.attributes.uv.values[2 * i] = t / n.xSegCount, n.attributes.uv.values[2 * i + 1] = 1 - e / n.ySegCount, n.attributes.uvNorm.values[2 * i] = t / n.xSegCount * 2 - 1, n.attributes.uvNorm.values[2 * i + 1] = 1 - e / n.ySegCount * 2, t < n.xSegCount && e < n.ySegCount) {\n                const s = e * n.xSegCount + t;\n                n.attributes.index.values[6 * s] = i, n.attributes.index.values[6 * s + 1] = i + 1 + n.xSegCount, n.attributes.index.values[6 * s + 2] = i + 1, n.attributes.index.values[6 * s + 3] = i + 1, n.attributes.index.values[6 * s + 4] = i + 1 + n.xSegCount, n.attributes.index.values[6 * s + 5] = i + 2 + n.xSegCount;\n              }\n            }\n            n.attributes.uv.update(), n.attributes.uvNorm.update(), n.attributes.index.update(), s.debug(\"Geometry.setTopology\", {\n              uv: n.attributes.uv,\n              uvNorm: n.attributes.uvNorm,\n              index: n.attributes.index\n            });\n          }\n          setSize() {\n            let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n            let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n            let n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"xz\";\n            const i = this;\n            i.width = e, i.height = t, i.orientation = n, i.attributes.position.values && i.attributes.position.values.length === 3 * i.vertexCount || (i.attributes.position.values = new Float32Array(3 * i.vertexCount));\n            const o = e / -2,\n              r = t / -2,\n              a = e / i.xSegCount,\n              l = t / i.ySegCount;\n            for (let e = 0; e <= i.ySegCount; e++) {\n              const t = r + e * l;\n              for (let s = 0; s <= i.xSegCount; s++) {\n                const r = o + s * a,\n                  l = e * (i.xSegCount + 1) + s;\n                i.attributes.position.values[3 * l + \"xyz\".indexOf(n[0])] = r, i.attributes.position.values[3 * l + \"xyz\".indexOf(n[1])] = -t;\n              }\n            }\n            i.attributes.position.update(), s.debug(\"Geometry.setSize\", {\n              position: i.attributes.position\n            });\n          }\n        }\n      },\n      Mesh: {\n        enumerable: !1,\n        value: class {\n          constructor(e, t) {\n            const n = this;\n            n.geometry = e, n.material = t, n.wireframe = !1, n.attributeInstances = [], Object.entries(n.geometry.attributes).forEach(_ref5 => {\n              let [e, t] = _ref5;\n              n.attributeInstances.push({\n                attribute: t,\n                location: t.attach(e, n.material.program)\n              });\n            }), s.meshes.push(n), s.debug(\"Mesh.constructor\", {\n              mesh: n\n            });\n          }\n          draw() {\n            r.useProgram(this.material.program), this.material.uniformInstances.forEach(_ref6 => {\n              let {\n                uniform: e,\n                location: t\n              } = _ref6;\n              return e.update(t);\n            }), this.attributeInstances.forEach(_ref7 => {\n              let {\n                attribute: e,\n                location: t\n              } = _ref7;\n              return e.use(t);\n            }), r.drawElements(this.wireframe ? r.LINES : r.TRIANGLES, this.geometry.attributes.index.values.length, r.UNSIGNED_SHORT, 0);\n          }\n          remove() {\n            s.meshes = s.meshes.filter(e => e != this);\n          }\n        }\n      },\n      Attribute: {\n        enumerable: !1,\n        value: class {\n          constructor(e) {\n            this.type = r.FLOAT, this.normalized = !1, this.buffer = r.createBuffer(), Object.assign(this, e), this.update();\n          }\n          update() {\n            void 0 !== this.values && (r.bindBuffer(this.target, this.buffer), r.bufferData(this.target, this.values, r.STATIC_DRAW));\n          }\n          attach(e, t) {\n            const n = r.getAttribLocation(t, e);\n            return this.target === r.ARRAY_BUFFER && (r.enableVertexAttribArray(n), r.vertexAttribPointer(n, this.size, this.type, this.normalized, 0, 0)), n;\n          }\n          use(e) {\n            r.bindBuffer(this.target, this.buffer), this.target === r.ARRAY_BUFFER && (r.enableVertexAttribArray(e), r.vertexAttribPointer(e, this.size, this.type, this.normalized, 0, 0));\n          }\n        }\n      }\n    });\n    const a = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n    s.commonUniforms = {\n      projectionMatrix: new s.Uniform({\n        type: \"mat4\",\n        value: a\n      }),\n      modelViewMatrix: new s.Uniform({\n        type: \"mat4\",\n        value: a\n      }),\n      resolution: new s.Uniform({\n        type: \"vec2\",\n        value: [1, 1]\n      }),\n      aspectRatio: new s.Uniform({\n        type: \"float\",\n        value: 1\n      })\n    };\n  }\n  setSize() {\n    let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 640;\n    let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 480;\n    this.width = e, this.height = t, this.canvas.width = e, this.canvas.height = t, this.gl.viewport(0, 0, e, t), this.commonUniforms.resolution.value = [e, t], this.commonUniforms.aspectRatio.value = e / t, this.debug(\"MiniGL.setSize\", {\n      width: e,\n      height: t\n    });\n  }\n  setOrthographicCamera() {\n    let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    let n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    let i = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : -2e3;\n    let s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 2e3;\n    this.commonUniforms.projectionMatrix.value = [2 / this.width, 0, 0, 0, 0, 2 / this.height, 0, 0, 0, 0, 2 / (i - s), 0, e, t, n, 1], this.debug(\"setOrthographicCamera\", this.commonUniforms.projectionMatrix.value);\n  }\n  render() {\n    this.gl.clearColor(0, 0, 0, 0), this.gl.clearDepth(1), this.meshes.forEach(e => e.draw());\n  }\n}\nfunction a(e) {\n  return [(e >> 16 & 255) / 255, (e >> 8 & 255) / 255, (255 & e) / 255];\n}\n[\"SCREEN\", \"LINEAR_LIGHT\"].reduce((e, t, n) => Object.assign(e, {\n  [t]: n\n}), {});\nn.register(\"Gradient\", class extends i {\n  constructor() {\n    super(...arguments), e(this, \"el\", void 0), e(this, \"cssVarRetries\", 0), e(this, \"maxCssVarRetries\", 200), e(this, \"angle\", 0), e(this, \"isLoadedClass\", !1), e(this, \"isScrolling\", !1), e(this, \"isStatic\", o.disableAmbientAnimations()), e(this, \"scrollingTimeout\", void 0), e(this, \"scrollingRefreshDelay\", 200), e(this, \"isIntersecting\", !1), e(this, \"shaderFiles\", void 0), e(this, \"vertexShader\", void 0), e(this, \"sectionColors\", void 0), e(this, \"computedCanvasStyle\", void 0), e(this, \"conf\", void 0), e(this, \"uniforms\", void 0), e(this, \"t\", 1253106), e(this, \"last\", 0), e(this, \"width\", void 0), e(this, \"minWidth\", 1111), e(this, \"height\", 600), e(this, \"xSegCount\", void 0), e(this, \"ySegCount\", void 0), e(this, \"mesh\", void 0), e(this, \"material\", void 0), e(this, \"geometry\", void 0), e(this, \"minigl\", void 0), e(this, \"scrollObserver\", void 0), e(this, \"amp\", 320), e(this, \"seed\", 5), e(this, \"freqX\", 14e-5), e(this, \"freqY\", 29e-5), e(this, \"freqDelta\", 1e-5), e(this, \"activeColors\", [1, 1, 1, 1]), e(this, \"konamiCode\", [\"arrowup\", \"arrowup\", \"arrowdown\", \"arrowdown\", \"arrowleft\", \"arrowright\", \"arrowleft\", \"arrowright\", \"b\", \"a\"]), e(this, \"konamiIndex\", 0), e(this, \"isMetaKey\", !1), e(this, \"isGradientLegendVisible\", !1), e(this, \"isMouseDown\", !1), e(this, \"handleScroll\", () => {\n      clearTimeout(this.scrollingTimeout), this.scrollingTimeout = setTimeout(this.handleScrollEnd, this.scrollingRefreshDelay), this.isGradientLegendVisible && this.hideGradientLegend(), this.conf.playing && (this.isScrolling = !0, this.pause());\n    }), e(this, \"handleScrollEnd\", () => {\n      this.isScrolling = !1, this.isIntersecting && this.play();\n    }), e(this, \"resize\", () => {\n      this.width = window.innerWidth, this.minigl.setSize(this.width, this.height), this.minigl.setOrthographicCamera(), this.xSegCount = Math.ceil(this.width * this.conf.density[0]), this.ySegCount = Math.ceil(this.height * this.conf.density[1]), this.mesh.geometry.setTopology(this.xSegCount, this.ySegCount), this.mesh.geometry.setSize(this.width, this.height), this.mesh.material.uniforms.u_shadow_power.value = this.width < 600 ? 5 : 6;\n    }), e(this, \"handleMouseDown\", e => {\n      this.isGradientLegendVisible && (this.isMetaKey = e.metaKey, this.isMouseDown = !0, !1 === this.conf.playing && requestAnimationFrame(this.animate));\n    }), e(this, \"handleMouseUp\", () => {\n      this.isMouseDown = !1;\n    }), e(this, \"handleKeyDown\", e => {\n      if (this.checkKonami(e), this.isGradientLegendVisible) {\n        switch (e.key) {\n          case \"1\":\n            this.toggleColor(1);\n            break;\n          case \"2\":\n            this.toggleColor(2);\n            break;\n          case \"3\":\n            this.toggleColor(3);\n            break;\n          case \"4\":\n            this.toggleColor(0);\n            break;\n          case \"-\":\n            this.updateFrequency(this.freqDelta);\n            break;\n          case \"+\":\n            this.updateFrequency(-this.freqDelta);\n            break;\n          case \"_\":\n            this.updateFrequency(this.freqDelta);\n            break;\n          case \"=\":\n            this.updateFrequency(-this.freqDelta);\n            break;\n          case \"p\":\n            this.conf.playing ? this.pause() : this.play();\n            break;\n          case \"ArrowUp\":\n            e.preventDefault(), this.amp += 10;\n            break;\n          case \"ArrowDown\":\n            e.preventDefault(), this.amp -= 10;\n            break;\n          case \"ArrowLeft\":\n            this.freqX += this.freqDelta;\n            break;\n          case \"ArrowRight\":\n            this.freqX -= this.freqDelta;\n        }\n        this.mesh.material.uniforms.u_vertDeform.value.noiseAmp.value = this.amp, this.mesh.material.uniforms.u_global.value.noiseFreq.value = [this.freqX, this.freqY], this.mesh.material.uniforms.u_active_colors.value = this.activeColors, this.minigl.render();\n      }\n    }), e(this, \"animate\", e => {\n      if (!this.shouldSkipFrame(e) || this.isMouseDown) {\n        if (this.t += Math.min(e - this.last, 1e3 / 15), this.last = e, this.isMouseDown) {\n          let e = 160;\n          this.isMetaKey && (e = -160), this.t += e;\n        }\n        this.mesh.material.uniforms.u_time.value = this.t, this.minigl.render();\n      }\n      if (0 !== this.last && this.isStatic) return this.minigl.render(), void this.disconnect();\n      (this.isIntersecting && this.conf.playing || this.isMouseDown) && requestAnimationFrame(this.animate);\n    }), e(this, \"addIsLoadedClass\", () => {\n      this.isIntersecting && !this.isLoadedClass && (this.isLoadedClass = !0, this.el.classList.add(\"isLoaded\"), setTimeout(() => {\n        this.el.parentElement.classList.add(\"isLoaded\");\n      }, 3e3));\n    }), e(this, \"pause\", () => {\n      this.conf.playing = !1;\n    }), e(this, \"play\", () => {\n      requestAnimationFrame(this.animate), this.conf.playing = !0;\n    });\n  }\n  async connect() {\n    this.shaderFiles = {\n      vertex: \"varying vec3 v_color;\\n\\nvoid main() {\\n  float time = u_time * u_global.noiseSpeed;\\n\\n  vec2 noiseCoord = resolution * uvNorm * u_global.noiseFreq;\\n\\n  vec2 st = 1. - uvNorm.xy;\\n\\n  //\\n  // Tilting the plane\\n  //\\n\\n  // Front-to-back tilt\\n  float tilt = resolution.y / 2.0 * uvNorm.y;\\n\\n  // Left-to-right angle\\n  float incline = resolution.x * uvNorm.x / 2.0 * u_vertDeform.incline;\\n\\n  // Up-down shift to offset incline\\n  float offset = resolution.x / 2.0 * u_vertDeform.incline * mix(u_vertDeform.offsetBottom, u_vertDeform.offsetTop, uv.y);\\n\\n  //\\n  // Vertex noise\\n  //\\n\\n  float noise = snoise(vec3(\\n    noiseCoord.x * u_vertDeform.noiseFreq.x + time * u_vertDeform.noiseFlow,\\n    noiseCoord.y * u_vertDeform.noiseFreq.y,\\n    time * u_vertDeform.noiseSpeed + u_vertDeform.noiseSeed\\n  )) * u_vertDeform.noiseAmp;\\n\\n  // Fade noise to zero at edges\\n  noise *= 1.0 - pow(abs(uvNorm.y), 2.0);\\n\\n  // Clamp to 0\\n  noise = max(0.0, noise);\\n\\n  vec3 pos = vec3(\\n    position.x,\\n    position.y + tilt + incline + noise - offset,\\n    position.z\\n  );\\n\\n  //\\n  // Vertex color, to be passed to fragment shader\\n  //\\n\\n  if (u_active_colors[0] == 1.) {\\n    v_color = u_baseColor;\\n  }\\n\\n  for (int i = 0; i < u_waveLayers_length; i++) {\\n    if (u_active_colors[i + 1] == 1.) {\\n      WaveLayers layer = u_waveLayers[i];\\n\\n      float noise = smoothstep(\\n        layer.noiseFloor,\\n        layer.noiseCeil,\\n        snoise(vec3(\\n          noiseCoord.x * layer.noiseFreq.x + time * layer.noiseFlow,\\n          noiseCoord.y * layer.noiseFreq.y,\\n          time * layer.noiseSpeed + layer.noiseSeed\\n        )) / 2.0 + 0.5\\n      );\\n\\n      v_color = blendNormal(v_color, layer.color, pow(noise, 4.));\\n    }\\n  }\\n\\n  //\\n  // Finish\\n  //\\n\\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.0);\\n}\",\n      noise: \"//\\n// Description : Array and textureless GLSL 2D/3D/4D simplex\\n//               noise functions.\\n//      Author : Ian McEwan, Ashima Arts.\\n//  Maintainer : stegu\\n//     Lastmod : 20110822 (ijm)\\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\\n//               Distributed under the MIT License. See LICENSE file.\\n//               https://github.com/ashima/webgl-noise\\n//               https://github.com/stegu/webgl-noise\\n//\\n\\nvec3 mod289(vec3 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 mod289(vec4 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 permute(vec4 x) {\\n    return mod289(((x*34.0)+1.0)*x);\\n}\\n\\nvec4 taylorInvSqrt(vec4 r)\\n{\\n  return 1.79284291400159 - 0.85373472095314 * r;\\n}\\n\\nfloat snoise(vec3 v)\\n{\\n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\\n  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\\n\\n// First corner\\n  vec3 i  = floor(v + dot(v, C.yyy) );\\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\\n\\n// Other corners\\n  vec3 g = step(x0.yzx, x0.xyz);\\n  vec3 l = 1.0 - g;\\n  vec3 i1 = min( g.xyz, l.zxy );\\n  vec3 i2 = max( g.xyz, l.zxy );\\n\\n  //   x0 = x0 - 0.0 + 0.0 * C.xxx;\\n  //   x1 = x0 - i1  + 1.0 * C.xxx;\\n  //   x2 = x0 - i2  + 2.0 * C.xxx;\\n  //   x3 = x0 - 1.0 + 3.0 * C.xxx;\\n  vec3 x1 = x0 - i1 + C.xxx;\\n  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\\n  vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\\n\\n// Permutations\\n  i = mod289(i);\\n  vec4 p = permute( permute( permute(\\n            i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\\n          + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))\\n          + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\\n\\n// Gradients: 7x7 points over a square, mapped onto an octahedron.\\n// The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\\n  float n_ = 0.142857142857; // 1.0/7.0\\n  vec3  ns = n_ * D.wyz - D.xzx;\\n\\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\\n\\n  vec4 x_ = floor(j * ns.z);\\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\\n\\n  vec4 x = x_ *ns.x + ns.yyyy;\\n  vec4 y = y_ *ns.x + ns.yyyy;\\n  vec4 h = 1.0 - abs(x) - abs(y);\\n\\n  vec4 b0 = vec4( x.xy, y.xy );\\n  vec4 b1 = vec4( x.zw, y.zw );\\n\\n  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\\n  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\\n  vec4 s0 = floor(b0)*2.0 + 1.0;\\n  vec4 s1 = floor(b1)*2.0 + 1.0;\\n  vec4 sh = -step(h, vec4(0.0));\\n\\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\\n  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\\n\\n  vec3 p0 = vec3(a0.xy,h.x);\\n  vec3 p1 = vec3(a0.zw,h.y);\\n  vec3 p2 = vec3(a1.xy,h.z);\\n  vec3 p3 = vec3(a1.zw,h.w);\\n\\n//Normalise gradients\\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\\n  p0 *= norm.x;\\n  p1 *= norm.y;\\n  p2 *= norm.z;\\n  p3 *= norm.w;\\n\\n// Mix final noise value\\n  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\\n  m = m * m;\\n  return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1),\\n                                dot(p2,x2), dot(p3,x3) ) );\\n}\",\n      blend: \"//\\n// https://github.com/jamieowen/glsl-blend\\n//\\n\\n// Normal\\n\\nvec3 blendNormal(vec3 base, vec3 blend) {\\n\\treturn blend;\\n}\\n\\nvec3 blendNormal(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendNormal(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Screen\\n\\nfloat blendScreen(float base, float blend) {\\n\\treturn 1.0-((1.0-base)*(1.0-blend));\\n}\\n\\nvec3 blendScreen(vec3 base, vec3 blend) {\\n\\treturn vec3(blendScreen(base.r,blend.r),blendScreen(base.g,blend.g),blendScreen(base.b,blend.b));\\n}\\n\\nvec3 blendScreen(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendScreen(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Multiply\\n\\nvec3 blendMultiply(vec3 base, vec3 blend) {\\n\\treturn base*blend;\\n}\\n\\nvec3 blendMultiply(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendMultiply(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Overlay\\n\\nfloat blendOverlay(float base, float blend) {\\n\\treturn base<0.5?(2.0*base*blend):(1.0-2.0*(1.0-base)*(1.0-blend));\\n}\\n\\nvec3 blendOverlay(vec3 base, vec3 blend) {\\n\\treturn vec3(blendOverlay(base.r,blend.r),blendOverlay(base.g,blend.g),blendOverlay(base.b,blend.b));\\n}\\n\\nvec3 blendOverlay(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendOverlay(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Hard light\\n\\nvec3 blendHardLight(vec3 base, vec3 blend) {\\n\\treturn blendOverlay(blend,base);\\n}\\n\\nvec3 blendHardLight(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendHardLight(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Soft light\\n\\nfloat blendSoftLight(float base, float blend) {\\n\\treturn (blend<0.5)?(2.0*base*blend+base*base*(1.0-2.0*blend)):(sqrt(base)*(2.0*blend-1.0)+2.0*base*(1.0-blend));\\n}\\n\\nvec3 blendSoftLight(vec3 base, vec3 blend) {\\n\\treturn vec3(blendSoftLight(base.r,blend.r),blendSoftLight(base.g,blend.g),blendSoftLight(base.b,blend.b));\\n}\\n\\nvec3 blendSoftLight(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendSoftLight(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Color dodge\\n\\nfloat blendColorDodge(float base, float blend) {\\n\\treturn (blend==1.0)?blend:min(base/(1.0-blend),1.0);\\n}\\n\\nvec3 blendColorDodge(vec3 base, vec3 blend) {\\n\\treturn vec3(blendColorDodge(base.r,blend.r),blendColorDodge(base.g,blend.g),blendColorDodge(base.b,blend.b));\\n}\\n\\nvec3 blendColorDodge(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendColorDodge(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Color burn\\n\\nfloat blendColorBurn(float base, float blend) {\\n\\treturn (blend==0.0)?blend:max((1.0-((1.0-base)/blend)),0.0);\\n}\\n\\nvec3 blendColorBurn(vec3 base, vec3 blend) {\\n\\treturn vec3(blendColorBurn(base.r,blend.r),blendColorBurn(base.g,blend.g),blendColorBurn(base.b,blend.b));\\n}\\n\\nvec3 blendColorBurn(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendColorBurn(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Vivid Light\\n\\nfloat blendVividLight(float base, float blend) {\\n\\treturn (blend<0.5)?blendColorBurn(base,(2.0*blend)):blendColorDodge(base,(2.0*(blend-0.5)));\\n}\\n\\nvec3 blendVividLight(vec3 base, vec3 blend) {\\n\\treturn vec3(blendVividLight(base.r,blend.r),blendVividLight(base.g,blend.g),blendVividLight(base.b,blend.b));\\n}\\n\\nvec3 blendVividLight(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendVividLight(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Lighten\\n\\nfloat blendLighten(float base, float blend) {\\n\\treturn max(blend,base);\\n}\\n\\nvec3 blendLighten(vec3 base, vec3 blend) {\\n\\treturn vec3(blendLighten(base.r,blend.r),blendLighten(base.g,blend.g),blendLighten(base.b,blend.b));\\n}\\n\\nvec3 blendLighten(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendLighten(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Linear burn\\n\\nfloat blendLinearBurn(float base, float blend) {\\n\\t// Note : Same implementation as BlendSubtractf\\n\\treturn max(base+blend-1.0,0.0);\\n}\\n\\nvec3 blendLinearBurn(vec3 base, vec3 blend) {\\n\\t// Note : Same implementation as BlendSubtract\\n\\treturn max(base+blend-vec3(1.0),vec3(0.0));\\n}\\n\\nvec3 blendLinearBurn(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendLinearBurn(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Linear dodge\\n\\nfloat blendLinearDodge(float base, float blend) {\\n\\t// Note : Same implementation as BlendAddf\\n\\treturn min(base+blend,1.0);\\n}\\n\\nvec3 blendLinearDodge(vec3 base, vec3 blend) {\\n\\t// Note : Same implementation as BlendAdd\\n\\treturn min(base+blend,vec3(1.0));\\n}\\n\\nvec3 blendLinearDodge(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendLinearDodge(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Linear light\\n\\nfloat blendLinearLight(float base, float blend) {\\n\\treturn blend<0.5?blendLinearBurn(base,(2.0*blend)):blendLinearDodge(base,(2.0*(blend-0.5)));\\n}\\n\\nvec3 blendLinearLight(vec3 base, vec3 blend) {\\n\\treturn vec3(blendLinearLight(base.r,blend.r),blendLinearLight(base.g,blend.g),blendLinearLight(base.b,blend.b));\\n}\\n\\nvec3 blendLinearLight(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendLinearLight(base, blend) * opacity + base * (1.0 - opacity));\\n}\",\n      fragment: \"varying vec3 v_color;\\n\\nvoid main() {\\n  vec3 color = v_color;\\n  if (u_darken_top == 1.0) {\\n    vec2 st = gl_FragCoord.xy/resolution.xy;\\n    color.g -= pow(st.y + sin(-12.0) * st.x, u_shadow_power) * 0.4;\\n  }\\n  gl_FragColor = vec4(color, 1.0);\\n}\"\n    }, this.conf = {\n      presetName: \"\",\n      wireframe: !1,\n      density: [.06, .16],\n      zoom: 1,\n      rotation: 0,\n      playing: !0\n    }, document.querySelectorAll(\"canvas\").length < 1 ? t.info(\"DID NOT LOAD HERO STRIPE CANVAS\") : (this.minigl = new r(this.el, null, null, !0), requestAnimationFrame(() => {\n      this.el && (this.computedCanvasStyle = getComputedStyle(this.el), this.waitForCssVars());\n    }), this.scrollObserver = await s.create(.1, !1), this.scrollObserver.observe(this.el), this.scrollObserver.onSeparate(() => {\n      window.removeEventListener(\"scroll\", this.handleScroll), window.removeEventListener(\"mousedown\", this.handleMouseDown), window.removeEventListener(\"mouseup\", this.handleMouseUp), window.removeEventListener(\"keydown\", this.handleKeyDown), this.isIntersecting = !1, this.conf.playing && this.pause();\n    }), this.scrollObserver.onIntersect(() => {\n      window.addEventListener(\"scroll\", this.handleScroll), window.addEventListener(\"mousedown\", this.handleMouseDown), window.addEventListener(\"mouseup\", this.handleMouseUp), window.addEventListener(\"keydown\", this.handleKeyDown), this.isIntersecting = !0, this.addIsLoadedClass(), this.play();\n    }));\n  }\n  disconnect() {\n    this.scrollObserver && (window.removeEventListener(\"scroll\", this.handleScroll), window.removeEventListener(\"mousedown\", this.handleMouseDown), window.removeEventListener(\"mouseup\", this.handleMouseUp), window.removeEventListener(\"keydown\", this.handleKeyDown), this.scrollObserver.disconnect()), window.removeEventListener(\"resize\", this.resize);\n  }\n  initMaterial() {\n    this.uniforms = {\n      u_time: new this.minigl.Uniform({\n        value: 0\n      }),\n      u_shadow_power: new this.minigl.Uniform({\n        value: 5\n      }),\n      u_darken_top: new this.minigl.Uniform({\n        value: \"\" === this.el.dataset.jsDarkenTop ? 1 : 0\n      }),\n      u_active_colors: new this.minigl.Uniform({\n        value: this.activeColors,\n        type: \"vec4\"\n      }),\n      u_global: new this.minigl.Uniform({\n        value: {\n          noiseFreq: new this.minigl.Uniform({\n            value: [this.freqX, this.freqY],\n            type: \"vec2\"\n          }),\n          noiseSpeed: new this.minigl.Uniform({\n            value: 5e-6\n          })\n        },\n        type: \"struct\"\n      }),\n      u_vertDeform: new this.minigl.Uniform({\n        value: {\n          incline: new this.minigl.Uniform({\n            value: Math.sin(this.angle) / Math.cos(this.angle)\n          }),\n          offsetTop: new this.minigl.Uniform({\n            value: -.5\n          }),\n          offsetBottom: new this.minigl.Uniform({\n            value: -.5\n          }),\n          noiseFreq: new this.minigl.Uniform({\n            value: [3, 4],\n            type: \"vec2\"\n          }),\n          noiseAmp: new this.minigl.Uniform({\n            value: this.amp\n          }),\n          noiseSpeed: new this.minigl.Uniform({\n            value: 10\n          }),\n          noiseFlow: new this.minigl.Uniform({\n            value: 3\n          }),\n          noiseSeed: new this.minigl.Uniform({\n            value: this.seed\n          })\n        },\n        type: \"struct\",\n        excludeFrom: \"fragment\"\n      }),\n      u_baseColor: new this.minigl.Uniform({\n        value: this.sectionColors[0],\n        type: \"vec3\",\n        excludeFrom: \"fragment\"\n      }),\n      u_waveLayers: new this.minigl.Uniform({\n        value: [],\n        excludeFrom: \"fragment\",\n        type: \"array\"\n      })\n    };\n    for (let e = 1; e < this.sectionColors.length; e += 1) this.uniforms.u_waveLayers.value.push(new this.minigl.Uniform({\n      value: {\n        color: new this.minigl.Uniform({\n          value: this.sectionColors[e],\n          type: \"vec3\"\n        }),\n        noiseFreq: new this.minigl.Uniform({\n          value: [2 + e / this.sectionColors.length, 3 + e / this.sectionColors.length],\n          type: \"vec2\"\n        }),\n        noiseSpeed: new this.minigl.Uniform({\n          value: 11 + .3 * e\n        }),\n        noiseFlow: new this.minigl.Uniform({\n          value: 6.5 + .3 * e\n        }),\n        noiseSeed: new this.minigl.Uniform({\n          value: this.seed + 10 * e\n        }),\n        noiseFloor: new this.minigl.Uniform({\n          value: .1\n        }),\n        noiseCeil: new this.minigl.Uniform({\n          value: .63 + .07 * e\n        })\n      },\n      type: \"struct\"\n    }));\n    return this.vertexShader = [this.shaderFiles.noise, this.shaderFiles.blend, this.shaderFiles.vertex].join(\"\\n\\n\"), new this.minigl.Material(this.vertexShader, this.shaderFiles.fragment, this.uniforms);\n  }\n  initMesh() {\n    this.material = this.initMaterial(), this.geometry = new this.minigl.PlaneGeometry(), this.mesh = new this.minigl.Mesh(this.geometry, this.material);\n  }\n  shouldSkipFrame(e) {\n    return !!window.document.hidden || !this.conf.playing || parseInt(e, 10) % 2 == 0 || void 0;\n  }\n  checkKonami(e) {\n    e.key.toLowerCase() === this.konamiCode[this.konamiIndex] ? this.konamiIndex += 1 : this.konamiIndex = 0, this.konamiIndex > 1 && e.preventDefault(), this.konamiIndex < this.konamiCode.length || this.showGradientLegend();\n  }\n  updateFrequency(e) {\n    this.freqX += e, this.freqY += e;\n  }\n  toggleColor(e) {\n    this.activeColors[e] = 0 === this.activeColors[e] ? 1 : 0;\n  }\n  showGradientLegend() {\n    this.width > this.minWidth && (this.isGradientLegendVisible = !0, document.body.classList.add(\"isGradientLegendVisible\"));\n  }\n  hideGradientLegend() {\n    this.isGradientLegendVisible = !1, document.body.classList.remove(\"isGradientLegendVisible\");\n  }\n  init() {\n    this.initGradientColors(), this.initMesh(), this.resize(), requestAnimationFrame(this.animate), window.addEventListener(\"resize\", this.resize);\n  }\n  waitForCssVars() {\n    if (this.computedCanvasStyle && -1 !== this.computedCanvasStyle.getPropertyValue(\"--gradientColorOne\").indexOf(\"#\")) this.init(), this.addIsLoadedClass();else {\n      if (this.cssVarRetries += 1, this.cssVarRetries > this.maxCssVarRetries) return this.sectionColors = [16711680, 16711680, 16711935, 65280, 255], void this.init();\n      requestAnimationFrame(() => this.waitForCssVars());\n    }\n  }\n  initGradientColors() {\n    this.sectionColors = [\"--gradientColorZero\", \"--gradientColorOne\", \"--gradientColorTwo\", \"--gradientColorThree\"].map(e => {\n      let t = this.computedCanvasStyle.getPropertyValue(e).trim();\n      if (4 === t.length) {\n        const e = t.substr(1).split(\"\").map(e => e + e).join(\"\");\n        t = `#${e}`;\n      }\n      return t && `0x${t.substr(1)}`;\n    }).filter(Boolean).map(a);\n  }\n});","map":{"version":3,"names":["_","e","L","t","a","n","C","i","S","s","F","o","r","constructor","arguments","length","undefined","document","location","search","toLowerCase","indexOf","canvas","gl","getContext","antialias","meshes","setSize","lastDebugMsg","debug","Date","console","log","toLocaleTimeString","Array","Math","max","join","from","slice","Object","defineProperties","Material","enumerable","value","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","error","getShaderInfoLog","source","entries","map","_ref","getDeclaration","uniforms","uniformInstances","l","vertexSource","commonUniforms","fragmentSource","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","program","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","useProgram","attachUniforms","forEach","_ref2","type","_ref3","name","uniform","push","getUniformLocation","Uniform","assign","typeFn","float","int","vec2","vec3","vec4","mat4","update","transpose","excludeFrom","replace","charAt","toUpperCase","_ref4","PlaneGeometry","createBuffer","attributes","position","Attribute","target","ARRAY_BUFFER","size","uv","uvNorm","index","ELEMENT_ARRAY_BUFFER","UNSIGNED_SHORT","setTopology","xSegCount","ySegCount","vertexCount","quadCount","values","Float32Array","Uint16Array","width","height","orientation","Mesh","geometry","material","wireframe","attributeInstances","_ref5","attribute","attach","mesh","draw","_ref6","_ref7","use","drawElements","LINES","TRIANGLES","remove","filter","FLOAT","normalized","buffer","bindBuffer","bufferData","STATIC_DRAW","getAttribLocation","enableVertexAttribArray","vertexAttribPointer","projectionMatrix","modelViewMatrix","resolution","aspectRatio","viewport","setOrthographicCamera","render","clearColor","clearDepth","reduce","register","disableAmbientAnimations","clearTimeout","scrollingTimeout","setTimeout","handleScrollEnd","scrollingRefreshDelay","isGradientLegendVisible","hideGradientLegend","conf","playing","isScrolling","pause","isIntersecting","play","window","innerWidth","minigl","ceil","density","u_shadow_power","isMetaKey","metaKey","isMouseDown","requestAnimationFrame","animate","checkKonami","key","toggleColor","updateFrequency","freqDelta","preventDefault","amp","freqX","u_vertDeform","noiseAmp","u_global","noiseFreq","freqY","u_active_colors","activeColors","shouldSkipFrame","min","last","u_time","isStatic","disconnect","isLoadedClass","el","classList","add","parentElement","connect","shaderFiles","vertex","noise","blend","fragment","presetName","zoom","rotation","querySelectorAll","info","computedCanvasStyle","getComputedStyle","waitForCssVars","scrollObserver","create","observe","onSeparate","removeEventListener","handleScroll","handleMouseDown","handleMouseUp","handleKeyDown","onIntersect","addEventListener","addIsLoadedClass","resize","initMaterial","u_darken_top","dataset","jsDarkenTop","noiseSpeed","incline","sin","angle","cos","offsetTop","offsetBottom","noiseFlow","noiseSeed","seed","u_baseColor","sectionColors","u_waveLayers","color","noiseFloor","noiseCeil","initMesh","hidden","parseInt","konamiCode","konamiIndex","showGradientLegend","minWidth","body","init","initGradientColors","getPropertyValue","cssVarRetries","maxCssVarRetries","trim","substr","split","Boolean"],"sources":["/Users/charlesbuckley/coding/uniswap-v3-subgraph/src/components/Gradient.js"],"sourcesContent":["/* eslint-disable no-unused-expressions */\nimport {_ as e, L as t} from \"./index-4deec983.js\";\nimport {a as n, C as i} from \"./Controller-26bd1e9e.js\";\nimport {S as s} from \"./ScrollObserver-d0732a2c.js\";\nimport {F as o} from \"./index-bee741e4.js\";\nclass r {\n    constructor(e, t, n, i=!1) {\n        const s = this\n          , o = -1 !== document.location.search.toLowerCase().indexOf(\"debug=webgl\");\n        s.canvas = e,\n        s.gl = s.canvas.getContext(\"webgl\", {\n            antialias: !0\n        }),\n        s.meshes = [];\n        const r = s.gl;\n        t && n && this.setSize(t, n),\n        s.lastDebugMsg,\n        s.debug = i && o ? function(e) {\n            const t = new Date;\n            t - s.lastDebugMsg > 1e3 && console.log(\"---\"),\n            console.log(t.toLocaleTimeString() + Array(Math.max(0, 32 - e.length)).join(\" \") + e + \": \", ...Array.from(arguments).slice(1)),\n            s.lastDebugMsg = t\n        }\n        : ()=>{}\n        ,\n        Object.defineProperties(s, {\n            Material: {\n                enumerable: !1,\n                value: class {\n                    constructor(e, t, n={}) {\n                        const i = this;\n                        function o(e, t) {\n                            const n = r.createShader(e);\n                            return r.shaderSource(n, t),\n                            r.compileShader(n),\n                            r.getShaderParameter(n, r.COMPILE_STATUS) || console.error(r.getShaderInfoLog(n)),\n                            s.debug(\"Material.compileShaderSource\", {\n                                source: t\n                            }),\n                            n\n                        }\n                        function a(e, t) {\n                            return Object.entries(e).map(([e,n])=>n.getDeclaration(e, t)).join(\"\\n\")\n                        }\n                        i.uniforms = n,\n                        i.uniformInstances = [];\n                        const l = \"\\n              precision highp float;\\n            \";\n                        i.vertexSource = `\\n              ${l}\\n              attribute vec4 position;\\n              attribute vec2 uv;\\n              attribute vec2 uvNorm;\\n              ${a(s.commonUniforms, \"vertex\")}\\n              ${a(n, \"vertex\")}\\n              ${e}\\n            `,\n                        i.fragmentSource = `\\n              ${l}\\n              ${a(s.commonUniforms, \"fragment\")}\\n              ${a(n, \"fragment\")}\\n              ${t}\\n            `,\n                        i.vertexShader = o(r.VERTEX_SHADER, i.vertexSource),\n                        i.fragmentShader = o(r.FRAGMENT_SHADER, i.fragmentSource),\n                        i.program = r.createProgram(),\n                        r.attachShader(i.program, i.vertexShader),\n                        r.attachShader(i.program, i.fragmentShader),\n                        r.linkProgram(i.program),\n                        r.getProgramParameter(i.program, r.LINK_STATUS) || console.error(r.getProgramInfoLog(i.program)),\n                        r.useProgram(i.program),\n                        i.attachUniforms(void 0, s.commonUniforms),\n                        i.attachUniforms(void 0, i.uniforms)\n                    }\n                    attachUniforms(e, t) {\n                        const n = this;\n                        void 0 === e ? Object.entries(t).forEach(([e,t])=>{\n                            n.attachUniforms(e, t)\n                        }\n                        ) : \"array\" == t.type ? t.value.forEach((t,i)=>n.attachUniforms(`${e}[${i}]`, t)) : \"struct\" == t.type ? Object.entries(t.value).forEach(([t,i])=>n.attachUniforms(`${e}.${t}`, i)) : (s.debug(\"Material.attachUniforms\", {\n                            name: e,\n                            uniform: t\n                        }),\n                        n.uniformInstances.push({\n                            uniform: t,\n                            location: r.getUniformLocation(n.program, e)\n                        }))\n                    }\n                }\n            },\n            Uniform: {\n                enumerable: !1,\n                value: class {\n                    constructor(e) {\n                        this.type = \"float\",\n                        Object.assign(this, e);\n                        this.typeFn = {\n                            float: \"1f\",\n                            int: \"1i\",\n                            vec2: \"2fv\",\n                            vec3: \"3fv\",\n                            vec4: \"4fv\",\n                            mat4: \"Matrix4fv\"\n                        }[this.type] || \"1f\",\n                        this.update()\n                    }\n                    update(e) {\n                        void 0 !== this.value && r[`uniform${this.typeFn}`](e, 0 === this.typeFn.indexOf(\"Matrix\") ? this.transpose : this.value, 0 === this.typeFn.indexOf(\"Matrix\") ? this.value : null)\n                    }\n                    getDeclaration(e, t, n) {\n                        const i = this;\n                        if (i.excludeFrom !== t) {\n                            if (\"array\" === i.type)\n                                return i.value[0].getDeclaration(e, t, i.value.length) + `\\nconst int ${e}_length = ${i.value.length};`;\n                            if (\"struct\" === i.type) {\n                                let s = e.replace(\"u_\", \"\");\n                                return s = s.charAt(0).toUpperCase() + s.slice(1),\n                                `uniform struct ${s} {\\n` + Object.entries(i.value).map(([e,n])=>n.getDeclaration(e, t).replace(/^uniform/, \"\")).join(\"\") + `\\n} ${e}${n > 0 ? `[${n}]` : \"\"};`\n                            }\n                            return `uniform ${i.type} ${e}${n > 0 ? `[${n}]` : \"\"};`\n                        }\n                    }\n                }\n            },\n            PlaneGeometry: {\n                enumerable: !1,\n                value: class {\n                    constructor(e, t, n, i, o) {\n                        r.createBuffer(),\n                        this.attributes = {\n                            position: new s.Attribute({\n                                target: r.ARRAY_BUFFER,\n                                size: 3\n                            }),\n                            uv: new s.Attribute({\n                                target: r.ARRAY_BUFFER,\n                                size: 2\n                            }),\n                            uvNorm: new s.Attribute({\n                                target: r.ARRAY_BUFFER,\n                                size: 2\n                            }),\n                            index: new s.Attribute({\n                                target: r.ELEMENT_ARRAY_BUFFER,\n                                size: 3,\n                                type: r.UNSIGNED_SHORT\n                            })\n                        },\n                        this.setTopology(n, i),\n                        this.setSize(e, t, o)\n                    }\n                    setTopology(e=1, t=1) {\n                        const n = this;\n                        n.xSegCount = e,\n                        n.ySegCount = t,\n                        n.vertexCount = (n.xSegCount + 1) * (n.ySegCount + 1),\n                        n.quadCount = n.xSegCount * n.ySegCount * 2,\n                        n.attributes.uv.values = new Float32Array(2 * n.vertexCount),\n                        n.attributes.uvNorm.values = new Float32Array(2 * n.vertexCount),\n                        n.attributes.index.values = new Uint16Array(3 * n.quadCount);\n                        for (let e = 0; e <= n.ySegCount; e++)\n                            for (let t = 0; t <= n.xSegCount; t++) {\n                                const i = e * (n.xSegCount + 1) + t;\n                                if (n.attributes.uv.values[2 * i] = t / n.xSegCount,\n                                n.attributes.uv.values[2 * i + 1] = 1 - e / n.ySegCount,\n                                n.attributes.uvNorm.values[2 * i] = t / n.xSegCount * 2 - 1,\n                                n.attributes.uvNorm.values[2 * i + 1] = 1 - e / n.ySegCount * 2,\n                                t < n.xSegCount && e < n.ySegCount) {\n                                    const s = e * n.xSegCount + t;\n                                    n.attributes.index.values[6 * s] = i,\n                                    n.attributes.index.values[6 * s + 1] = i + 1 + n.xSegCount,\n                                    n.attributes.index.values[6 * s + 2] = i + 1,\n                                    n.attributes.index.values[6 * s + 3] = i + 1,\n                                    n.attributes.index.values[6 * s + 4] = i + 1 + n.xSegCount,\n                                    n.attributes.index.values[6 * s + 5] = i + 2 + n.xSegCount\n                                }\n                            }\n                        n.attributes.uv.update(),\n                        n.attributes.uvNorm.update(),\n                        n.attributes.index.update(),\n                        s.debug(\"Geometry.setTopology\", {\n                            uv: n.attributes.uv,\n                            uvNorm: n.attributes.uvNorm,\n                            index: n.attributes.index\n                        })\n                    }\n                    setSize(e=1, t=1, n=\"xz\") {\n                        const i = this;\n                        i.width = e,\n                        i.height = t,\n                        i.orientation = n,\n                        i.attributes.position.values && i.attributes.position.values.length === 3 * i.vertexCount || (i.attributes.position.values = new Float32Array(3 * i.vertexCount));\n                        const o = e / -2\n                          , r = t / -2\n                          , a = e / i.xSegCount\n                          , l = t / i.ySegCount;\n                        for (let e = 0; e <= i.ySegCount; e++) {\n                            const t = r + e * l;\n                            for (let s = 0; s <= i.xSegCount; s++) {\n                                const r = o + s * a\n                                  , l = e * (i.xSegCount + 1) + s;\n                                i.attributes.position.values[3 * l + \"xyz\".indexOf(n[0])] = r,\n                                i.attributes.position.values[3 * l + \"xyz\".indexOf(n[1])] = -t\n                            }\n                        }\n                        i.attributes.position.update(),\n                        s.debug(\"Geometry.setSize\", {\n                            position: i.attributes.position\n                        })\n                    }\n                }\n            },\n            Mesh: {\n                enumerable: !1,\n                value: class {\n                    constructor(e, t) {\n                        const n = this;\n                        n.geometry = e,\n                        n.material = t,\n                        n.wireframe = !1,\n                        n.attributeInstances = [],\n                        Object.entries(n.geometry.attributes).forEach(([e,t])=>{\n                            n.attributeInstances.push({\n                                attribute: t,\n                                location: t.attach(e, n.material.program)\n                            })\n                        }\n                        ),\n                        s.meshes.push(n),\n                        s.debug(\"Mesh.constructor\", {\n                            mesh: n\n                        })\n                    }\n                    draw() {\n                        r.useProgram(this.material.program),\n                        this.material.uniformInstances.forEach(({uniform: e, location: t})=>e.update(t)),\n                        this.attributeInstances.forEach(({attribute: e, location: t})=>e.use(t)),\n                        r.drawElements(this.wireframe ? r.LINES : r.TRIANGLES, this.geometry.attributes.index.values.length, r.UNSIGNED_SHORT, 0)\n                    }\n                    remove() {\n                        s.meshes = s.meshes.filter(e=>e != this)\n                    }\n                }\n            },\n            Attribute: {\n                enumerable: !1,\n                value: class {\n                    constructor(e) {\n                        this.type = r.FLOAT,\n                        this.normalized = !1,\n                        this.buffer = r.createBuffer(),\n                        Object.assign(this, e),\n                        this.update()\n                    }\n                    update() {\n                        void 0 !== this.values && (r.bindBuffer(this.target, this.buffer),\n                        r.bufferData(this.target, this.values, r.STATIC_DRAW))\n                    }\n                    attach(e, t) {\n                        const n = r.getAttribLocation(t, e);\n                        return this.target === r.ARRAY_BUFFER && (r.enableVertexAttribArray(n),\n                        r.vertexAttribPointer(n, this.size, this.type, this.normalized, 0, 0)),\n                        n\n                    }\n                    use(e) {\n                        r.bindBuffer(this.target, this.buffer),\n                        this.target === r.ARRAY_BUFFER && (r.enableVertexAttribArray(e),\n                        r.vertexAttribPointer(e, this.size, this.type, this.normalized, 0, 0))\n                    }\n                }\n            }\n        });\n        const a = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n        s.commonUniforms = {\n            projectionMatrix: new s.Uniform({\n                type: \"mat4\",\n                value: a\n            }),\n            modelViewMatrix: new s.Uniform({\n                type: \"mat4\",\n                value: a\n            }),\n            resolution: new s.Uniform({\n                type: \"vec2\",\n                value: [1, 1]\n            }),\n            aspectRatio: new s.Uniform({\n                type: \"float\",\n                value: 1\n            })\n        }\n    }\n    setSize(e=640, t=480) {\n        this.width = e,\n        this.height = t,\n        this.canvas.width = e,\n        this.canvas.height = t,\n        this.gl.viewport(0, 0, e, t),\n        this.commonUniforms.resolution.value = [e, t],\n        this.commonUniforms.aspectRatio.value = e / t,\n        this.debug(\"MiniGL.setSize\", {\n            width: e,\n            height: t\n        })\n    }\n    setOrthographicCamera(e=0, t=0, n=0, i=-2e3, s=2e3) {\n        this.commonUniforms.projectionMatrix.value = [2 / this.width, 0, 0, 0, 0, 2 / this.height, 0, 0, 0, 0, 2 / (i - s), 0, e, t, n, 1],\n        this.debug(\"setOrthographicCamera\", this.commonUniforms.projectionMatrix.value)\n    }\n    render() {\n        this.gl.clearColor(0, 0, 0, 0),\n        this.gl.clearDepth(1),\n        this.meshes.forEach(e=>e.draw())\n    }\n}\nfunction a(e) {\n    return [(e >> 16 & 255) / 255, (e >> 8 & 255) / 255, (255 & e) / 255]\n}\n[\"SCREEN\", \"LINEAR_LIGHT\"].reduce((e,t,n)=>Object.assign(e, {\n    [t]: n\n}), {});\nn.register(\"Gradient\", class extends i {\n    constructor(...t) {\n        super(...t),\n        e(this, \"el\", void 0),\n        e(this, \"cssVarRetries\", 0),\n        e(this, \"maxCssVarRetries\", 200),\n        e(this, \"angle\", 0),\n        e(this, \"isLoadedClass\", !1),\n        e(this, \"isScrolling\", !1),\n        e(this, \"isStatic\", o.disableAmbientAnimations()),\n        e(this, \"scrollingTimeout\", void 0),\n        e(this, \"scrollingRefreshDelay\", 200),\n        e(this, \"isIntersecting\", !1),\n        e(this, \"shaderFiles\", void 0),\n        e(this, \"vertexShader\", void 0),\n        e(this, \"sectionColors\", void 0),\n        e(this, \"computedCanvasStyle\", void 0),\n        e(this, \"conf\", void 0),\n        e(this, \"uniforms\", void 0),\n        e(this, \"t\", 1253106),\n        e(this, \"last\", 0),\n        e(this, \"width\", void 0),\n        e(this, \"minWidth\", 1111),\n        e(this, \"height\", 600),\n        e(this, \"xSegCount\", void 0),\n        e(this, \"ySegCount\", void 0),\n        e(this, \"mesh\", void 0),\n        e(this, \"material\", void 0),\n        e(this, \"geometry\", void 0),\n        e(this, \"minigl\", void 0),\n        e(this, \"scrollObserver\", void 0),\n        e(this, \"amp\", 320),\n        e(this, \"seed\", 5),\n        e(this, \"freqX\", 14e-5),\n        e(this, \"freqY\", 29e-5),\n        e(this, \"freqDelta\", 1e-5),\n        e(this, \"activeColors\", [1, 1, 1, 1]),\n        e(this, \"konamiCode\", [\"arrowup\", \"arrowup\", \"arrowdown\", \"arrowdown\", \"arrowleft\", \"arrowright\", \"arrowleft\", \"arrowright\", \"b\", \"a\"]),\n        e(this, \"konamiIndex\", 0),\n        e(this, \"isMetaKey\", !1),\n        e(this, \"isGradientLegendVisible\", !1),\n        e(this, \"isMouseDown\", !1),\n        e(this, \"handleScroll\", ()=>{\n            clearTimeout(this.scrollingTimeout),\n            this.scrollingTimeout = setTimeout(this.handleScrollEnd, this.scrollingRefreshDelay),\n            this.isGradientLegendVisible && this.hideGradientLegend(),\n            this.conf.playing && (this.isScrolling = !0,\n            this.pause())\n        }\n        ),\n        e(this, \"handleScrollEnd\", ()=>{\n            this.isScrolling = !1,\n            this.isIntersecting && this.play()\n        }\n        ),\n        e(this, \"resize\", ()=>{\n            this.width = window.innerWidth,\n            this.minigl.setSize(this.width, this.height),\n            this.minigl.setOrthographicCamera(),\n            this.xSegCount = Math.ceil(this.width * this.conf.density[0]),\n            this.ySegCount = Math.ceil(this.height * this.conf.density[1]),\n            this.mesh.geometry.setTopology(this.xSegCount, this.ySegCount),\n            this.mesh.geometry.setSize(this.width, this.height),\n            this.mesh.material.uniforms.u_shadow_power.value = this.width < 600 ? 5 : 6\n        }\n        ),\n        e(this, \"handleMouseDown\", e=>{\n            this.isGradientLegendVisible && (this.isMetaKey = e.metaKey,\n            this.isMouseDown = !0,\n            !1 === this.conf.playing && requestAnimationFrame(this.animate))\n        }\n        ),\n        e(this, \"handleMouseUp\", ()=>{\n            this.isMouseDown = !1\n        }\n        ),\n        e(this, \"handleKeyDown\", e=>{\n            if (this.checkKonami(e),\n            this.isGradientLegendVisible) {\n                switch (e.key) {\n                case \"1\":\n                    this.toggleColor(1);\n                    break;\n                case \"2\":\n                    this.toggleColor(2);\n                    break;\n                case \"3\":\n                    this.toggleColor(3);\n                    break;\n                case \"4\":\n                    this.toggleColor(0);\n                    break;\n                case \"-\":\n                    this.updateFrequency(this.freqDelta);\n                    break;\n                case \"+\":\n                    this.updateFrequency(-this.freqDelta);\n                    break;\n                case \"_\":\n                    this.updateFrequency(this.freqDelta);\n                    break;\n                case \"=\":\n                    this.updateFrequency(-this.freqDelta);\n                    break;\n                case \"p\":\n                    this.conf.playing ? this.pause() : this.play();\n                    break;\n                case \"ArrowUp\":\n                    e.preventDefault(),\n                    this.amp += 10;\n                    break;\n                case \"ArrowDown\":\n                    e.preventDefault(),\n                    this.amp -= 10;\n                    break;\n                case \"ArrowLeft\":\n                    this.freqX += this.freqDelta;\n                    break;\n                case \"ArrowRight\":\n                    this.freqX -= this.freqDelta\n                }\n                this.mesh.material.uniforms.u_vertDeform.value.noiseAmp.value = this.amp,\n                this.mesh.material.uniforms.u_global.value.noiseFreq.value = [this.freqX, this.freqY],\n                this.mesh.material.uniforms.u_active_colors.value = this.activeColors,\n                this.minigl.render()\n            }\n        }\n        ),\n        e(this, \"animate\", e=>{\n            if (!this.shouldSkipFrame(e) || this.isMouseDown) {\n                if (this.t += Math.min(e - this.last, 1e3 / 15),\n                this.last = e,\n                this.isMouseDown) {\n                    let e = 160;\n                    this.isMetaKey && (e = -160),\n                    this.t += e\n                }\n                this.mesh.material.uniforms.u_time.value = this.t,\n                this.minigl.render()\n            }\n            if (0 !== this.last && this.isStatic)\n                return this.minigl.render(),\n                void this.disconnect();\n            (this.isIntersecting && this.conf.playing || this.isMouseDown) && requestAnimationFrame(this.animate)\n        }\n        ),\n        e(this, \"addIsLoadedClass\", ()=>{\n            this.isIntersecting && !this.isLoadedClass && (this.isLoadedClass = !0,\n            this.el.classList.add(\"isLoaded\"),\n            setTimeout(()=>{\n                this.el.parentElement.classList.add(\"isLoaded\")\n            }\n            , 3e3))\n        }\n        ),\n        e(this, \"pause\", ()=>{\n            this.conf.playing = !1\n        }\n        ),\n        e(this, \"play\", ()=>{\n            requestAnimationFrame(this.animate),\n            this.conf.playing = !0\n        }\n        )\n    }\n    async connect() {\n        this.shaderFiles = {\n            vertex: \"varying vec3 v_color;\\n\\nvoid main() {\\n  float time = u_time * u_global.noiseSpeed;\\n\\n  vec2 noiseCoord = resolution * uvNorm * u_global.noiseFreq;\\n\\n  vec2 st = 1. - uvNorm.xy;\\n\\n  //\\n  // Tilting the plane\\n  //\\n\\n  // Front-to-back tilt\\n  float tilt = resolution.y / 2.0 * uvNorm.y;\\n\\n  // Left-to-right angle\\n  float incline = resolution.x * uvNorm.x / 2.0 * u_vertDeform.incline;\\n\\n  // Up-down shift to offset incline\\n  float offset = resolution.x / 2.0 * u_vertDeform.incline * mix(u_vertDeform.offsetBottom, u_vertDeform.offsetTop, uv.y);\\n\\n  //\\n  // Vertex noise\\n  //\\n\\n  float noise = snoise(vec3(\\n    noiseCoord.x * u_vertDeform.noiseFreq.x + time * u_vertDeform.noiseFlow,\\n    noiseCoord.y * u_vertDeform.noiseFreq.y,\\n    time * u_vertDeform.noiseSpeed + u_vertDeform.noiseSeed\\n  )) * u_vertDeform.noiseAmp;\\n\\n  // Fade noise to zero at edges\\n  noise *= 1.0 - pow(abs(uvNorm.y), 2.0);\\n\\n  // Clamp to 0\\n  noise = max(0.0, noise);\\n\\n  vec3 pos = vec3(\\n    position.x,\\n    position.y + tilt + incline + noise - offset,\\n    position.z\\n  );\\n\\n  //\\n  // Vertex color, to be passed to fragment shader\\n  //\\n\\n  if (u_active_colors[0] == 1.) {\\n    v_color = u_baseColor;\\n  }\\n\\n  for (int i = 0; i < u_waveLayers_length; i++) {\\n    if (u_active_colors[i + 1] == 1.) {\\n      WaveLayers layer = u_waveLayers[i];\\n\\n      float noise = smoothstep(\\n        layer.noiseFloor,\\n        layer.noiseCeil,\\n        snoise(vec3(\\n          noiseCoord.x * layer.noiseFreq.x + time * layer.noiseFlow,\\n          noiseCoord.y * layer.noiseFreq.y,\\n          time * layer.noiseSpeed + layer.noiseSeed\\n        )) / 2.0 + 0.5\\n      );\\n\\n      v_color = blendNormal(v_color, layer.color, pow(noise, 4.));\\n    }\\n  }\\n\\n  //\\n  // Finish\\n  //\\n\\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.0);\\n}\",\n            noise: \"//\\n// Description : Array and textureless GLSL 2D/3D/4D simplex\\n//               noise functions.\\n//      Author : Ian McEwan, Ashima Arts.\\n//  Maintainer : stegu\\n//     Lastmod : 20110822 (ijm)\\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\\n//               Distributed under the MIT License. See LICENSE file.\\n//               https://github.com/ashima/webgl-noise\\n//               https://github.com/stegu/webgl-noise\\n//\\n\\nvec3 mod289(vec3 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 mod289(vec4 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 permute(vec4 x) {\\n    return mod289(((x*34.0)+1.0)*x);\\n}\\n\\nvec4 taylorInvSqrt(vec4 r)\\n{\\n  return 1.79284291400159 - 0.85373472095314 * r;\\n}\\n\\nfloat snoise(vec3 v)\\n{\\n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\\n  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\\n\\n// First corner\\n  vec3 i  = floor(v + dot(v, C.yyy) );\\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\\n\\n// Other corners\\n  vec3 g = step(x0.yzx, x0.xyz);\\n  vec3 l = 1.0 - g;\\n  vec3 i1 = min( g.xyz, l.zxy );\\n  vec3 i2 = max( g.xyz, l.zxy );\\n\\n  //   x0 = x0 - 0.0 + 0.0 * C.xxx;\\n  //   x1 = x0 - i1  + 1.0 * C.xxx;\\n  //   x2 = x0 - i2  + 2.0 * C.xxx;\\n  //   x3 = x0 - 1.0 + 3.0 * C.xxx;\\n  vec3 x1 = x0 - i1 + C.xxx;\\n  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\\n  vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\\n\\n// Permutations\\n  i = mod289(i);\\n  vec4 p = permute( permute( permute(\\n            i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\\n          + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))\\n          + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\\n\\n// Gradients: 7x7 points over a square, mapped onto an octahedron.\\n// The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\\n  float n_ = 0.142857142857; // 1.0/7.0\\n  vec3  ns = n_ * D.wyz - D.xzx;\\n\\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\\n\\n  vec4 x_ = floor(j * ns.z);\\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\\n\\n  vec4 x = x_ *ns.x + ns.yyyy;\\n  vec4 y = y_ *ns.x + ns.yyyy;\\n  vec4 h = 1.0 - abs(x) - abs(y);\\n\\n  vec4 b0 = vec4( x.xy, y.xy );\\n  vec4 b1 = vec4( x.zw, y.zw );\\n\\n  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\\n  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\\n  vec4 s0 = floor(b0)*2.0 + 1.0;\\n  vec4 s1 = floor(b1)*2.0 + 1.0;\\n  vec4 sh = -step(h, vec4(0.0));\\n\\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\\n  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\\n\\n  vec3 p0 = vec3(a0.xy,h.x);\\n  vec3 p1 = vec3(a0.zw,h.y);\\n  vec3 p2 = vec3(a1.xy,h.z);\\n  vec3 p3 = vec3(a1.zw,h.w);\\n\\n//Normalise gradients\\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\\n  p0 *= norm.x;\\n  p1 *= norm.y;\\n  p2 *= norm.z;\\n  p3 *= norm.w;\\n\\n// Mix final noise value\\n  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\\n  m = m * m;\\n  return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1),\\n                                dot(p2,x2), dot(p3,x3) ) );\\n}\",\n            blend: \"//\\n// https://github.com/jamieowen/glsl-blend\\n//\\n\\n// Normal\\n\\nvec3 blendNormal(vec3 base, vec3 blend) {\\n\\treturn blend;\\n}\\n\\nvec3 blendNormal(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendNormal(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Screen\\n\\nfloat blendScreen(float base, float blend) {\\n\\treturn 1.0-((1.0-base)*(1.0-blend));\\n}\\n\\nvec3 blendScreen(vec3 base, vec3 blend) {\\n\\treturn vec3(blendScreen(base.r,blend.r),blendScreen(base.g,blend.g),blendScreen(base.b,blend.b));\\n}\\n\\nvec3 blendScreen(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendScreen(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Multiply\\n\\nvec3 blendMultiply(vec3 base, vec3 blend) {\\n\\treturn base*blend;\\n}\\n\\nvec3 blendMultiply(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendMultiply(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Overlay\\n\\nfloat blendOverlay(float base, float blend) {\\n\\treturn base<0.5?(2.0*base*blend):(1.0-2.0*(1.0-base)*(1.0-blend));\\n}\\n\\nvec3 blendOverlay(vec3 base, vec3 blend) {\\n\\treturn vec3(blendOverlay(base.r,blend.r),blendOverlay(base.g,blend.g),blendOverlay(base.b,blend.b));\\n}\\n\\nvec3 blendOverlay(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendOverlay(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Hard light\\n\\nvec3 blendHardLight(vec3 base, vec3 blend) {\\n\\treturn blendOverlay(blend,base);\\n}\\n\\nvec3 blendHardLight(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendHardLight(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Soft light\\n\\nfloat blendSoftLight(float base, float blend) {\\n\\treturn (blend<0.5)?(2.0*base*blend+base*base*(1.0-2.0*blend)):(sqrt(base)*(2.0*blend-1.0)+2.0*base*(1.0-blend));\\n}\\n\\nvec3 blendSoftLight(vec3 base, vec3 blend) {\\n\\treturn vec3(blendSoftLight(base.r,blend.r),blendSoftLight(base.g,blend.g),blendSoftLight(base.b,blend.b));\\n}\\n\\nvec3 blendSoftLight(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendSoftLight(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Color dodge\\n\\nfloat blendColorDodge(float base, float blend) {\\n\\treturn (blend==1.0)?blend:min(base/(1.0-blend),1.0);\\n}\\n\\nvec3 blendColorDodge(vec3 base, vec3 blend) {\\n\\treturn vec3(blendColorDodge(base.r,blend.r),blendColorDodge(base.g,blend.g),blendColorDodge(base.b,blend.b));\\n}\\n\\nvec3 blendColorDodge(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendColorDodge(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Color burn\\n\\nfloat blendColorBurn(float base, float blend) {\\n\\treturn (blend==0.0)?blend:max((1.0-((1.0-base)/blend)),0.0);\\n}\\n\\nvec3 blendColorBurn(vec3 base, vec3 blend) {\\n\\treturn vec3(blendColorBurn(base.r,blend.r),blendColorBurn(base.g,blend.g),blendColorBurn(base.b,blend.b));\\n}\\n\\nvec3 blendColorBurn(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendColorBurn(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Vivid Light\\n\\nfloat blendVividLight(float base, float blend) {\\n\\treturn (blend<0.5)?blendColorBurn(base,(2.0*blend)):blendColorDodge(base,(2.0*(blend-0.5)));\\n}\\n\\nvec3 blendVividLight(vec3 base, vec3 blend) {\\n\\treturn vec3(blendVividLight(base.r,blend.r),blendVividLight(base.g,blend.g),blendVividLight(base.b,blend.b));\\n}\\n\\nvec3 blendVividLight(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendVividLight(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Lighten\\n\\nfloat blendLighten(float base, float blend) {\\n\\treturn max(blend,base);\\n}\\n\\nvec3 blendLighten(vec3 base, vec3 blend) {\\n\\treturn vec3(blendLighten(base.r,blend.r),blendLighten(base.g,blend.g),blendLighten(base.b,blend.b));\\n}\\n\\nvec3 blendLighten(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendLighten(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Linear burn\\n\\nfloat blendLinearBurn(float base, float blend) {\\n\\t// Note : Same implementation as BlendSubtractf\\n\\treturn max(base+blend-1.0,0.0);\\n}\\n\\nvec3 blendLinearBurn(vec3 base, vec3 blend) {\\n\\t// Note : Same implementation as BlendSubtract\\n\\treturn max(base+blend-vec3(1.0),vec3(0.0));\\n}\\n\\nvec3 blendLinearBurn(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendLinearBurn(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Linear dodge\\n\\nfloat blendLinearDodge(float base, float blend) {\\n\\t// Note : Same implementation as BlendAddf\\n\\treturn min(base+blend,1.0);\\n}\\n\\nvec3 blendLinearDodge(vec3 base, vec3 blend) {\\n\\t// Note : Same implementation as BlendAdd\\n\\treturn min(base+blend,vec3(1.0));\\n}\\n\\nvec3 blendLinearDodge(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendLinearDodge(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Linear light\\n\\nfloat blendLinearLight(float base, float blend) {\\n\\treturn blend<0.5?blendLinearBurn(base,(2.0*blend)):blendLinearDodge(base,(2.0*(blend-0.5)));\\n}\\n\\nvec3 blendLinearLight(vec3 base, vec3 blend) {\\n\\treturn vec3(blendLinearLight(base.r,blend.r),blendLinearLight(base.g,blend.g),blendLinearLight(base.b,blend.b));\\n}\\n\\nvec3 blendLinearLight(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendLinearLight(base, blend) * opacity + base * (1.0 - opacity));\\n}\",\n            fragment: \"varying vec3 v_color;\\n\\nvoid main() {\\n  vec3 color = v_color;\\n  if (u_darken_top == 1.0) {\\n    vec2 st = gl_FragCoord.xy/resolution.xy;\\n    color.g -= pow(st.y + sin(-12.0) * st.x, u_shadow_power) * 0.4;\\n  }\\n  gl_FragColor = vec4(color, 1.0);\\n}\"\n        },\n        this.conf = {\n            presetName: \"\",\n            wireframe: !1,\n            density: [.06, .16],\n            zoom: 1,\n            rotation: 0,\n            playing: !0\n        },\n        document.querySelectorAll(\"canvas\").length < 1 ? t.info(\"DID NOT LOAD HERO STRIPE CANVAS\") : (this.minigl = new r(this.el,null,null,!0),\n        requestAnimationFrame(()=>{\n            this.el && (this.computedCanvasStyle = getComputedStyle(this.el),\n            this.waitForCssVars())\n        }\n        ),\n        this.scrollObserver = await s.create(.1, !1),\n        this.scrollObserver.observe(this.el),\n        this.scrollObserver.onSeparate(()=>{\n            window.removeEventListener(\"scroll\", this.handleScroll),\n            window.removeEventListener(\"mousedown\", this.handleMouseDown),\n            window.removeEventListener(\"mouseup\", this.handleMouseUp),\n            window.removeEventListener(\"keydown\", this.handleKeyDown),\n            this.isIntersecting = !1,\n            this.conf.playing && this.pause()\n        }\n        ),\n        this.scrollObserver.onIntersect(()=>{\n            window.addEventListener(\"scroll\", this.handleScroll),\n            window.addEventListener(\"mousedown\", this.handleMouseDown),\n            window.addEventListener(\"mouseup\", this.handleMouseUp),\n            window.addEventListener(\"keydown\", this.handleKeyDown),\n            this.isIntersecting = !0,\n            this.addIsLoadedClass(),\n            this.play()\n        }\n        ))\n    }\n    disconnect() {\n        this.scrollObserver && (window.removeEventListener(\"scroll\", this.handleScroll),\n        window.removeEventListener(\"mousedown\", this.handleMouseDown),\n        window.removeEventListener(\"mouseup\", this.handleMouseUp),\n        window.removeEventListener(\"keydown\", this.handleKeyDown),\n        this.scrollObserver.disconnect()),\n        window.removeEventListener(\"resize\", this.resize)\n    }\n    initMaterial() {\n        this.uniforms = {\n            u_time: new this.minigl.Uniform({\n                value: 0\n            }),\n            u_shadow_power: new this.minigl.Uniform({\n                value: 5\n            }),\n            u_darken_top: new this.minigl.Uniform({\n                value: \"\" === this.el.dataset.jsDarkenTop ? 1 : 0\n            }),\n            u_active_colors: new this.minigl.Uniform({\n                value: this.activeColors,\n                type: \"vec4\"\n            }),\n            u_global: new this.minigl.Uniform({\n                value: {\n                    noiseFreq: new this.minigl.Uniform({\n                        value: [this.freqX, this.freqY],\n                        type: \"vec2\"\n                    }),\n                    noiseSpeed: new this.minigl.Uniform({\n                        value: 5e-6\n                    })\n                },\n                type: \"struct\"\n            }),\n            u_vertDeform: new this.minigl.Uniform({\n                value: {\n                    incline: new this.minigl.Uniform({\n                        value: Math.sin(this.angle) / Math.cos(this.angle)\n                    }),\n                    offsetTop: new this.minigl.Uniform({\n                        value: -.5\n                    }),\n                    offsetBottom: new this.minigl.Uniform({\n                        value: -.5\n                    }),\n                    noiseFreq: new this.minigl.Uniform({\n                        value: [3, 4],\n                        type: \"vec2\"\n                    }),\n                    noiseAmp: new this.minigl.Uniform({\n                        value: this.amp\n                    }),\n                    noiseSpeed: new this.minigl.Uniform({\n                        value: 10\n                    }),\n                    noiseFlow: new this.minigl.Uniform({\n                        value: 3\n                    }),\n                    noiseSeed: new this.minigl.Uniform({\n                        value: this.seed\n                    })\n                },\n                type: \"struct\",\n                excludeFrom: \"fragment\"\n            }),\n            u_baseColor: new this.minigl.Uniform({\n                value: this.sectionColors[0],\n                type: \"vec3\",\n                excludeFrom: \"fragment\"\n            }),\n            u_waveLayers: new this.minigl.Uniform({\n                value: [],\n                excludeFrom: \"fragment\",\n                type: \"array\"\n            })\n        };\n        for (let e = 1; e < this.sectionColors.length; e += 1)\n            this.uniforms.u_waveLayers.value.push(new this.minigl.Uniform({\n                value: {\n                    color: new this.minigl.Uniform({\n                        value: this.sectionColors[e],\n                        type: \"vec3\"\n                    }),\n                    noiseFreq: new this.minigl.Uniform({\n                        value: [2 + e / this.sectionColors.length, 3 + e / this.sectionColors.length],\n                        type: \"vec2\"\n                    }),\n                    noiseSpeed: new this.minigl.Uniform({\n                        value: 11 + .3 * e\n                    }),\n                    noiseFlow: new this.minigl.Uniform({\n                        value: 6.5 + .3 * e\n                    }),\n                    noiseSeed: new this.minigl.Uniform({\n                        value: this.seed + 10 * e\n                    }),\n                    noiseFloor: new this.minigl.Uniform({\n                        value: .1\n                    }),\n                    noiseCeil: new this.minigl.Uniform({\n                        value: .63 + .07 * e\n                    })\n                },\n                type: \"struct\"\n            }));\n        return this.vertexShader = [this.shaderFiles.noise, this.shaderFiles.blend, this.shaderFiles.vertex].join(\"\\n\\n\"),\n        new this.minigl.Material(this.vertexShader,this.shaderFiles.fragment,this.uniforms)\n    }\n    initMesh() {\n        this.material = this.initMaterial(),\n        this.geometry = new this.minigl.PlaneGeometry,\n        this.mesh = new this.minigl.Mesh(this.geometry,this.material)\n    }\n    shouldSkipFrame(e) {\n        return !!window.document.hidden || (!this.conf.playing || (parseInt(e, 10) % 2 == 0 || void 0))\n    }\n    checkKonami(e) {\n        e.key.toLowerCase() === this.konamiCode[this.konamiIndex] ? this.konamiIndex += 1 : this.konamiIndex = 0,\n        this.konamiIndex > 1 && e.preventDefault(),\n        this.konamiIndex < this.konamiCode.length || this.showGradientLegend()\n    }\n    updateFrequency(e) {\n        this.freqX += e,\n        this.freqY += e\n    }\n    toggleColor(e) {\n        this.activeColors[e] = 0 === this.activeColors[e] ? 1 : 0\n    }\n    showGradientLegend() {\n        this.width > this.minWidth && (this.isGradientLegendVisible = !0,\n        document.body.classList.add(\"isGradientLegendVisible\"))\n    }\n    hideGradientLegend() {\n        this.isGradientLegendVisible = !1,\n        document.body.classList.remove(\"isGradientLegendVisible\")\n    }\n    init() {\n        this.initGradientColors(),\n        this.initMesh(),\n        this.resize(),\n        requestAnimationFrame(this.animate),\n        window.addEventListener(\"resize\", this.resize)\n    }\n    waitForCssVars() {\n        if (this.computedCanvasStyle && -1 !== this.computedCanvasStyle.getPropertyValue(\"--gradientColorOne\").indexOf(\"#\"))\n            this.init(),\n            this.addIsLoadedClass();\n        else {\n            if (this.cssVarRetries += 1,\n            this.cssVarRetries > this.maxCssVarRetries)\n                return this.sectionColors = [16711680, 16711680, 16711935, 65280, 255],\n                void this.init();\n            requestAnimationFrame(()=>this.waitForCssVars())\n        }\n    }\n    initGradientColors() {\n        this.sectionColors = [\"--gradientColorZero\", \"--gradientColorOne\", \"--gradientColorTwo\", \"--gradientColorThree\"].map(e=>{\n            let t = this.computedCanvasStyle.getPropertyValue(e).trim();\n            if (4 === t.length) {\n                const e = t.substr(1).split(\"\").map(e=>e + e).join(\"\");\n                t = `#${e}`\n            }\n            return t && `0x${t.substr(1)}`\n        }\n        ).filter(Boolean).map(a)\n    }\n}\n);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}